//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace VientVendreMVC.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompositeType", Namespace="http://schemas.datacontract.org/2004/07/AdminService")]
    [System.SerializableAttribute()]
    public partial class CompositeType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BoolValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StringValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BoolValue {
            get {
                return this.BoolValueField;
            }
            set {
                if ((this.BoolValueField.Equals(value) != true)) {
                    this.BoolValueField = value;
                    this.RaisePropertyChanged("BoolValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StringValue {
            get {
                return this.StringValueField;
            }
            set {
                if ((object.ReferenceEquals(this.StringValueField, value) != true)) {
                    this.StringValueField = value;
                    this.RaisePropertyChanged("StringValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IAdminService")]
    public interface IAdminService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/GetData", ReplyAction="http://tempuri.org/IAdminService/GetDataResponse")]
        string GetData(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/GetData", ReplyAction="http://tempuri.org/IAdminService/GetDataResponse")]
        System.Threading.Tasks.Task<string> GetDataAsync(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IAdminService/GetDataUsingDataContractResponse")]
        VientVendreMVC.ServiceReference1.CompositeType GetDataUsingDataContract(VientVendreMVC.ServiceReference1.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IAdminService/GetDataUsingDataContractResponse")]
        System.Threading.Tasks.Task<VientVendreMVC.ServiceReference1.CompositeType> GetDataUsingDataContractAsync(VientVendreMVC.ServiceReference1.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/GetAllUser", ReplyAction="http://tempuri.org/IAdminService/GetAllUserResponse")]
        DTO.UserDTO[] GetAllUser();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/GetAllUser", ReplyAction="http://tempuri.org/IAdminService/GetAllUserResponse")]
        System.Threading.Tasks.Task<DTO.UserDTO[]> GetAllUserAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/GetUserByID", ReplyAction="http://tempuri.org/IAdminService/GetUserByIDResponse")]
        DTO.UserDTO GetUserByID(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/GetUserByID", ReplyAction="http://tempuri.org/IAdminService/GetUserByIDResponse")]
        System.Threading.Tasks.Task<DTO.UserDTO> GetUserByIDAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/CreateUser", ReplyAction="http://tempuri.org/IAdminService/CreateUserResponse")]
        void CreateUser(DTO.UserDTO user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/CreateUser", ReplyAction="http://tempuri.org/IAdminService/CreateUserResponse")]
        System.Threading.Tasks.Task CreateUserAsync(DTO.UserDTO user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/DeleteUser", ReplyAction="http://tempuri.org/IAdminService/DeleteUserResponse")]
        void DeleteUser(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/DeleteUser", ReplyAction="http://tempuri.org/IAdminService/DeleteUserResponse")]
        System.Threading.Tasks.Task DeleteUserAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/UpdateUser", ReplyAction="http://tempuri.org/IAdminService/UpdateUserResponse")]
        void UpdateUser(DTO.UserDTO user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/UpdateUser", ReplyAction="http://tempuri.org/IAdminService/UpdateUserResponse")]
        System.Threading.Tasks.Task UpdateUserAsync(DTO.UserDTO user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/GetAllAnnonce", ReplyAction="http://tempuri.org/IAdminService/GetAllAnnonceResponse")]
        DTO.AnnonceDTO[] GetAllAnnonce();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/GetAllAnnonce", ReplyAction="http://tempuri.org/IAdminService/GetAllAnnonceResponse")]
        System.Threading.Tasks.Task<DTO.AnnonceDTO[]> GetAllAnnonceAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/GetAnnonceByID", ReplyAction="http://tempuri.org/IAdminService/GetAnnonceByIDResponse")]
        DTO.AnnonceDTO GetAnnonceByID(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/GetAnnonceByID", ReplyAction="http://tempuri.org/IAdminService/GetAnnonceByIDResponse")]
        System.Threading.Tasks.Task<DTO.AnnonceDTO> GetAnnonceByIDAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/GetAnnonceByUser", ReplyAction="http://tempuri.org/IAdminService/GetAnnonceByUserResponse")]
        DTO.AnnonceDTO[] GetAnnonceByUser(int idUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/GetAnnonceByUser", ReplyAction="http://tempuri.org/IAdminService/GetAnnonceByUserResponse")]
        System.Threading.Tasks.Task<DTO.AnnonceDTO[]> GetAnnonceByUserAsync(int idUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/GetAnnonceByRegion", ReplyAction="http://tempuri.org/IAdminService/GetAnnonceByRegionResponse")]
        DTO.AnnonceDTO[] GetAnnonceByRegion(int idRegion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/GetAnnonceByRegion", ReplyAction="http://tempuri.org/IAdminService/GetAnnonceByRegionResponse")]
        System.Threading.Tasks.Task<DTO.AnnonceDTO[]> GetAnnonceByRegionAsync(int idRegion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/CreateAnnonce", ReplyAction="http://tempuri.org/IAdminService/CreateAnnonceResponse")]
        void CreateAnnonce(DTO.AnnonceDTO newAnnonce);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/CreateAnnonce", ReplyAction="http://tempuri.org/IAdminService/CreateAnnonceResponse")]
        System.Threading.Tasks.Task CreateAnnonceAsync(DTO.AnnonceDTO newAnnonce);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/DeleteAnnonce", ReplyAction="http://tempuri.org/IAdminService/DeleteAnnonceResponse")]
        void DeleteAnnonce(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/DeleteAnnonce", ReplyAction="http://tempuri.org/IAdminService/DeleteAnnonceResponse")]
        System.Threading.Tasks.Task DeleteAnnonceAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/UpdateAnnonce", ReplyAction="http://tempuri.org/IAdminService/UpdateAnnonceResponse")]
        void UpdateAnnonce(DTO.AnnonceDTO annonce);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/UpdateAnnonce", ReplyAction="http://tempuri.org/IAdminService/UpdateAnnonceResponse")]
        System.Threading.Tasks.Task UpdateAnnonceAsync(DTO.AnnonceDTO annonce);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/GetAllProduct", ReplyAction="http://tempuri.org/IAdminService/GetAllProductResponse")]
        DTO.ProductDTO[] GetAllProduct();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/GetAllProduct", ReplyAction="http://tempuri.org/IAdminService/GetAllProductResponse")]
        System.Threading.Tasks.Task<DTO.ProductDTO[]> GetAllProductAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/GetProductByID", ReplyAction="http://tempuri.org/IAdminService/GetProductByIDResponse")]
        DTO.ProductDTO GetProductByID(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/GetProductByID", ReplyAction="http://tempuri.org/IAdminService/GetProductByIDResponse")]
        System.Threading.Tasks.Task<DTO.ProductDTO> GetProductByIDAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/GetProductByCategory", ReplyAction="http://tempuri.org/IAdminService/GetProductByCategoryResponse")]
        DTO.ProductDTO[] GetProductByCategory(int idCategory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/GetProductByCategory", ReplyAction="http://tempuri.org/IAdminService/GetProductByCategoryResponse")]
        System.Threading.Tasks.Task<DTO.ProductDTO[]> GetProductByCategoryAsync(int idCategory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/GetProductByRegion", ReplyAction="http://tempuri.org/IAdminService/GetProductByRegionResponse")]
        DTO.ProductDTO[] GetProductByRegion(int idRegion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/GetProductByRegion", ReplyAction="http://tempuri.org/IAdminService/GetProductByRegionResponse")]
        System.Threading.Tasks.Task<DTO.ProductDTO[]> GetProductByRegionAsync(int idRegion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/GetProductByCategoryAndRegion", ReplyAction="http://tempuri.org/IAdminService/GetProductByCategoryAndRegionResponse")]
        DTO.ProductDTO[] GetProductByCategoryAndRegion(int idCategory, int idRegion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/GetProductByCategoryAndRegion", ReplyAction="http://tempuri.org/IAdminService/GetProductByCategoryAndRegionResponse")]
        System.Threading.Tasks.Task<DTO.ProductDTO[]> GetProductByCategoryAndRegionAsync(int idCategory, int idRegion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/GetProductByAnnonce", ReplyAction="http://tempuri.org/IAdminService/GetProductByAnnonceResponse")]
        DTO.ProductDTO[] GetProductByAnnonce(int annonceID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/GetProductByAnnonce", ReplyAction="http://tempuri.org/IAdminService/GetProductByAnnonceResponse")]
        System.Threading.Tasks.Task<DTO.ProductDTO[]> GetProductByAnnonceAsync(int annonceID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/GetProductByPrice", ReplyAction="http://tempuri.org/IAdminService/GetProductByPriceResponse")]
        DTO.ProductDTO[] GetProductByPrice(double MinPrice, double MaxPrice);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/GetProductByPrice", ReplyAction="http://tempuri.org/IAdminService/GetProductByPriceResponse")]
        System.Threading.Tasks.Task<DTO.ProductDTO[]> GetProductByPriceAsync(double MinPrice, double MaxPrice);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/GetProductByPriceAndRegion", ReplyAction="http://tempuri.org/IAdminService/GetProductByPriceAndRegionResponse")]
        DTO.ProductDTO[] GetProductByPriceAndRegion(double MinPrice, double MaxPrice, int idRegion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/GetProductByPriceAndRegion", ReplyAction="http://tempuri.org/IAdminService/GetProductByPriceAndRegionResponse")]
        System.Threading.Tasks.Task<DTO.ProductDTO[]> GetProductByPriceAndRegionAsync(double MinPrice, double MaxPrice, int idRegion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/GetProductByPriceAndCategory", ReplyAction="http://tempuri.org/IAdminService/GetProductByPriceAndCategoryResponse")]
        DTO.ProductDTO[] GetProductByPriceAndCategory(double MinPrice, double MaxPrice, int idCategory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/GetProductByPriceAndCategory", ReplyAction="http://tempuri.org/IAdminService/GetProductByPriceAndCategoryResponse")]
        System.Threading.Tasks.Task<DTO.ProductDTO[]> GetProductByPriceAndCategoryAsync(double MinPrice, double MaxPrice, int idCategory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/GetProductByPriceAndRegionAndCategory", ReplyAction="http://tempuri.org/IAdminService/GetProductByPriceAndRegionAndCategoryResponse")]
        DTO.ProductDTO[] GetProductByPriceAndRegionAndCategory(double MinPrice, double MaxPrice, int idRegion, int idCategory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/GetProductByPriceAndRegionAndCategory", ReplyAction="http://tempuri.org/IAdminService/GetProductByPriceAndRegionAndCategoryResponse")]
        System.Threading.Tasks.Task<DTO.ProductDTO[]> GetProductByPriceAndRegionAndCategoryAsync(double MinPrice, double MaxPrice, int idRegion, int idCategory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/CreateProduct", ReplyAction="http://tempuri.org/IAdminService/CreateProductResponse")]
        void CreateProduct(DTO.ProductDTO newProduct);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/CreateProduct", ReplyAction="http://tempuri.org/IAdminService/CreateProductResponse")]
        System.Threading.Tasks.Task CreateProductAsync(DTO.ProductDTO newProduct);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/DeleteProduct", ReplyAction="http://tempuri.org/IAdminService/DeleteProductResponse")]
        void DeleteProduct(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/DeleteProduct", ReplyAction="http://tempuri.org/IAdminService/DeleteProductResponse")]
        System.Threading.Tasks.Task DeleteProductAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/UpdateProduct", ReplyAction="http://tempuri.org/IAdminService/UpdateProductResponse")]
        void UpdateProduct(DTO.ProductDTO product);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/UpdateProduct", ReplyAction="http://tempuri.org/IAdminService/UpdateProductResponse")]
        System.Threading.Tasks.Task UpdateProductAsync(DTO.ProductDTO product);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/GetAllCategory", ReplyAction="http://tempuri.org/IAdminService/GetAllCategoryResponse")]
        DTO.CategoryDTO[] GetAllCategory();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/GetAllCategory", ReplyAction="http://tempuri.org/IAdminService/GetAllCategoryResponse")]
        System.Threading.Tasks.Task<DTO.CategoryDTO[]> GetAllCategoryAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/GetCategoryByID", ReplyAction="http://tempuri.org/IAdminService/GetCategoryByIDResponse")]
        DTO.CategoryDTO GetCategoryByID(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/GetCategoryByID", ReplyAction="http://tempuri.org/IAdminService/GetCategoryByIDResponse")]
        System.Threading.Tasks.Task<DTO.CategoryDTO> GetCategoryByIDAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/CreateCategory", ReplyAction="http://tempuri.org/IAdminService/CreateCategoryResponse")]
        void CreateCategory(DTO.CategoryDTO category);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/CreateCategory", ReplyAction="http://tempuri.org/IAdminService/CreateCategoryResponse")]
        System.Threading.Tasks.Task CreateCategoryAsync(DTO.CategoryDTO category);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/DeleteCategory", ReplyAction="http://tempuri.org/IAdminService/DeleteCategoryResponse")]
        void DeleteCategory(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/DeleteCategory", ReplyAction="http://tempuri.org/IAdminService/DeleteCategoryResponse")]
        System.Threading.Tasks.Task DeleteCategoryAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/UpdateCategory", ReplyAction="http://tempuri.org/IAdminService/UpdateCategoryResponse")]
        void UpdateCategory(DTO.CategoryDTO category);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/UpdateCategory", ReplyAction="http://tempuri.org/IAdminService/UpdateCategoryResponse")]
        System.Threading.Tasks.Task UpdateCategoryAsync(DTO.CategoryDTO category);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/GetAllRegion", ReplyAction="http://tempuri.org/IAdminService/GetAllRegionResponse")]
        DTO.RegionDTO[] GetAllRegion();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/GetAllRegion", ReplyAction="http://tempuri.org/IAdminService/GetAllRegionResponse")]
        System.Threading.Tasks.Task<DTO.RegionDTO[]> GetAllRegionAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/GetRegionByID", ReplyAction="http://tempuri.org/IAdminService/GetRegionByIDResponse")]
        DTO.RegionDTO GetRegionByID(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/GetRegionByID", ReplyAction="http://tempuri.org/IAdminService/GetRegionByIDResponse")]
        System.Threading.Tasks.Task<DTO.RegionDTO> GetRegionByIDAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/CreateRegion", ReplyAction="http://tempuri.org/IAdminService/CreateRegionResponse")]
        void CreateRegion(DTO.RegionDTO region);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/CreateRegion", ReplyAction="http://tempuri.org/IAdminService/CreateRegionResponse")]
        System.Threading.Tasks.Task CreateRegionAsync(DTO.RegionDTO region);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/DeleteRegion", ReplyAction="http://tempuri.org/IAdminService/DeleteRegionResponse")]
        void DeleteRegion(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/DeleteRegion", ReplyAction="http://tempuri.org/IAdminService/DeleteRegionResponse")]
        System.Threading.Tasks.Task DeleteRegionAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/UpdateRegion", ReplyAction="http://tempuri.org/IAdminService/UpdateRegionResponse")]
        void UpdateRegion(DTO.RegionDTO region);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/UpdateRegion", ReplyAction="http://tempuri.org/IAdminService/UpdateRegionResponse")]
        System.Threading.Tasks.Task UpdateRegionAsync(DTO.RegionDTO region);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/GetAllPhotoInfo", ReplyAction="http://tempuri.org/IAdminService/GetAllPhotoInfoResponse")]
        DTO.PhotoInfoDTO[] GetAllPhotoInfo();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/GetAllPhotoInfo", ReplyAction="http://tempuri.org/IAdminService/GetAllPhotoInfoResponse")]
        System.Threading.Tasks.Task<DTO.PhotoInfoDTO[]> GetAllPhotoInfoAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/GetPhotoInfoById", ReplyAction="http://tempuri.org/IAdminService/GetPhotoInfoByIdResponse")]
        DTO.PhotoInfoDTO GetPhotoInfoById(int IdPhoto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/GetPhotoInfoById", ReplyAction="http://tempuri.org/IAdminService/GetPhotoInfoByIdResponse")]
        System.Threading.Tasks.Task<DTO.PhotoInfoDTO> GetPhotoInfoByIdAsync(int IdPhoto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/CreatePhotoInfo", ReplyAction="http://tempuri.org/IAdminService/CreatePhotoInfoResponse")]
        void CreatePhotoInfo(DTO.PhotoInfoDTO photoDTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/CreatePhotoInfo", ReplyAction="http://tempuri.org/IAdminService/CreatePhotoInfoResponse")]
        System.Threading.Tasks.Task CreatePhotoInfoAsync(DTO.PhotoInfoDTO photoDTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/DeletePhotoInfo", ReplyAction="http://tempuri.org/IAdminService/DeletePhotoInfoResponse")]
        void DeletePhotoInfo(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/DeletePhotoInfo", ReplyAction="http://tempuri.org/IAdminService/DeletePhotoInfoResponse")]
        System.Threading.Tasks.Task DeletePhotoInfoAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/UpdatePhotoInfo", ReplyAction="http://tempuri.org/IAdminService/UpdatePhotoInfoResponse")]
        void UpdatePhotoInfo(DTO.PhotoInfoDTO photoDTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/UpdatePhotoInfo", ReplyAction="http://tempuri.org/IAdminService/UpdatePhotoInfoResponse")]
        System.Threading.Tasks.Task UpdatePhotoInfoAsync(DTO.PhotoInfoDTO photoDTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/GetImage", ReplyAction="http://tempuri.org/IAdminService/GetImageResponse")]
        System.IO.Stream GetImage(string user, string annonce, string fileName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/GetImage", ReplyAction="http://tempuri.org/IAdminService/GetImageResponse")]
        System.Threading.Tasks.Task<System.IO.Stream> GetImageAsync(string user, string annonce, string fileName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/ApproveOrRejectAll", ReplyAction="http://tempuri.org/IAdminService/ApproveOrRejectAllResponse")]
        void ApproveOrRejectAll(int[] Ids, string status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/ApproveOrRejectAll", ReplyAction="http://tempuri.org/IAdminService/ApproveOrRejectAllResponse")]
        System.Threading.Tasks.Task ApproveOrRejectAllAsync(int[] Ids, string status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/GetAllComment", ReplyAction="http://tempuri.org/IAdminService/GetAllCommentResponse")]
        DTO.CommentUserProdDTO[] GetAllComment();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/GetAllComment", ReplyAction="http://tempuri.org/IAdminService/GetAllCommentResponse")]
        System.Threading.Tasks.Task<DTO.CommentUserProdDTO[]> GetAllCommentAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/createComment", ReplyAction="http://tempuri.org/IAdminService/createCommentResponse")]
        void createComment(DTO.CommentUserProdDTO commDTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminService/createComment", ReplyAction="http://tempuri.org/IAdminService/createCommentResponse")]
        System.Threading.Tasks.Task createCommentAsync(DTO.CommentUserProdDTO commDTO);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAdminServiceChannel : VientVendreMVC.ServiceReference1.IAdminService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AdminServiceClient : System.ServiceModel.ClientBase<VientVendreMVC.ServiceReference1.IAdminService>, VientVendreMVC.ServiceReference1.IAdminService {
        
        public AdminServiceClient() {
        }
        
        public AdminServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AdminServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AdminServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AdminServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetData(int value) {
            return base.Channel.GetData(value);
        }
        
        public System.Threading.Tasks.Task<string> GetDataAsync(int value) {
            return base.Channel.GetDataAsync(value);
        }
        
        public VientVendreMVC.ServiceReference1.CompositeType GetDataUsingDataContract(VientVendreMVC.ServiceReference1.CompositeType composite) {
            return base.Channel.GetDataUsingDataContract(composite);
        }
        
        public System.Threading.Tasks.Task<VientVendreMVC.ServiceReference1.CompositeType> GetDataUsingDataContractAsync(VientVendreMVC.ServiceReference1.CompositeType composite) {
            return base.Channel.GetDataUsingDataContractAsync(composite);
        }
        
        public DTO.UserDTO[] GetAllUser() {
            return base.Channel.GetAllUser();
        }
        
        public System.Threading.Tasks.Task<DTO.UserDTO[]> GetAllUserAsync() {
            return base.Channel.GetAllUserAsync();
        }
        
        public DTO.UserDTO GetUserByID(int id) {
            return base.Channel.GetUserByID(id);
        }
        
        public System.Threading.Tasks.Task<DTO.UserDTO> GetUserByIDAsync(int id) {
            return base.Channel.GetUserByIDAsync(id);
        }
        
        public void CreateUser(DTO.UserDTO user) {
            base.Channel.CreateUser(user);
        }
        
        public System.Threading.Tasks.Task CreateUserAsync(DTO.UserDTO user) {
            return base.Channel.CreateUserAsync(user);
        }
        
        public void DeleteUser(int id) {
            base.Channel.DeleteUser(id);
        }
        
        public System.Threading.Tasks.Task DeleteUserAsync(int id) {
            return base.Channel.DeleteUserAsync(id);
        }
        
        public void UpdateUser(DTO.UserDTO user) {
            base.Channel.UpdateUser(user);
        }
        
        public System.Threading.Tasks.Task UpdateUserAsync(DTO.UserDTO user) {
            return base.Channel.UpdateUserAsync(user);
        }
        
        public DTO.AnnonceDTO[] GetAllAnnonce() {
            return base.Channel.GetAllAnnonce();
        }
        
        public System.Threading.Tasks.Task<DTO.AnnonceDTO[]> GetAllAnnonceAsync() {
            return base.Channel.GetAllAnnonceAsync();
        }
        
        public DTO.AnnonceDTO GetAnnonceByID(int id) {
            return base.Channel.GetAnnonceByID(id);
        }
        
        public System.Threading.Tasks.Task<DTO.AnnonceDTO> GetAnnonceByIDAsync(int id) {
            return base.Channel.GetAnnonceByIDAsync(id);
        }
        
        public DTO.AnnonceDTO[] GetAnnonceByUser(int idUser) {
            return base.Channel.GetAnnonceByUser(idUser);
        }
        
        public System.Threading.Tasks.Task<DTO.AnnonceDTO[]> GetAnnonceByUserAsync(int idUser) {
            return base.Channel.GetAnnonceByUserAsync(idUser);
        }
        
        public DTO.AnnonceDTO[] GetAnnonceByRegion(int idRegion) {
            return base.Channel.GetAnnonceByRegion(idRegion);
        }
        
        public System.Threading.Tasks.Task<DTO.AnnonceDTO[]> GetAnnonceByRegionAsync(int idRegion) {
            return base.Channel.GetAnnonceByRegionAsync(idRegion);
        }
        
        public void CreateAnnonce(DTO.AnnonceDTO newAnnonce) {
            base.Channel.CreateAnnonce(newAnnonce);
        }
        
        public System.Threading.Tasks.Task CreateAnnonceAsync(DTO.AnnonceDTO newAnnonce) {
            return base.Channel.CreateAnnonceAsync(newAnnonce);
        }
        
        public void DeleteAnnonce(int id) {
            base.Channel.DeleteAnnonce(id);
        }
        
        public System.Threading.Tasks.Task DeleteAnnonceAsync(int id) {
            return base.Channel.DeleteAnnonceAsync(id);
        }
        
        public void UpdateAnnonce(DTO.AnnonceDTO annonce) {
            base.Channel.UpdateAnnonce(annonce);
        }
        
        public System.Threading.Tasks.Task UpdateAnnonceAsync(DTO.AnnonceDTO annonce) {
            return base.Channel.UpdateAnnonceAsync(annonce);
        }
        
        public DTO.ProductDTO[] GetAllProduct() {
            return base.Channel.GetAllProduct();
        }
        
        public System.Threading.Tasks.Task<DTO.ProductDTO[]> GetAllProductAsync() {
            return base.Channel.GetAllProductAsync();
        }
        
        public DTO.ProductDTO GetProductByID(int id) {
            return base.Channel.GetProductByID(id);
        }
        
        public System.Threading.Tasks.Task<DTO.ProductDTO> GetProductByIDAsync(int id) {
            return base.Channel.GetProductByIDAsync(id);
        }
        
        public DTO.ProductDTO[] GetProductByCategory(int idCategory) {
            return base.Channel.GetProductByCategory(idCategory);
        }
        
        public System.Threading.Tasks.Task<DTO.ProductDTO[]> GetProductByCategoryAsync(int idCategory) {
            return base.Channel.GetProductByCategoryAsync(idCategory);
        }
        
        public DTO.ProductDTO[] GetProductByRegion(int idRegion) {
            return base.Channel.GetProductByRegion(idRegion);
        }
        
        public System.Threading.Tasks.Task<DTO.ProductDTO[]> GetProductByRegionAsync(int idRegion) {
            return base.Channel.GetProductByRegionAsync(idRegion);
        }
        
        public DTO.ProductDTO[] GetProductByCategoryAndRegion(int idCategory, int idRegion) {
            return base.Channel.GetProductByCategoryAndRegion(idCategory, idRegion);
        }
        
        public System.Threading.Tasks.Task<DTO.ProductDTO[]> GetProductByCategoryAndRegionAsync(int idCategory, int idRegion) {
            return base.Channel.GetProductByCategoryAndRegionAsync(idCategory, idRegion);
        }
        
        public DTO.ProductDTO[] GetProductByAnnonce(int annonceID) {
            return base.Channel.GetProductByAnnonce(annonceID);
        }
        
        public System.Threading.Tasks.Task<DTO.ProductDTO[]> GetProductByAnnonceAsync(int annonceID) {
            return base.Channel.GetProductByAnnonceAsync(annonceID);
        }
        
        public DTO.ProductDTO[] GetProductByPrice(double MinPrice, double MaxPrice) {
            return base.Channel.GetProductByPrice(MinPrice, MaxPrice);
        }
        
        public System.Threading.Tasks.Task<DTO.ProductDTO[]> GetProductByPriceAsync(double MinPrice, double MaxPrice) {
            return base.Channel.GetProductByPriceAsync(MinPrice, MaxPrice);
        }
        
        public DTO.ProductDTO[] GetProductByPriceAndRegion(double MinPrice, double MaxPrice, int idRegion) {
            return base.Channel.GetProductByPriceAndRegion(MinPrice, MaxPrice, idRegion);
        }
        
        public System.Threading.Tasks.Task<DTO.ProductDTO[]> GetProductByPriceAndRegionAsync(double MinPrice, double MaxPrice, int idRegion) {
            return base.Channel.GetProductByPriceAndRegionAsync(MinPrice, MaxPrice, idRegion);
        }
        
        public DTO.ProductDTO[] GetProductByPriceAndCategory(double MinPrice, double MaxPrice, int idCategory) {
            return base.Channel.GetProductByPriceAndCategory(MinPrice, MaxPrice, idCategory);
        }
        
        public System.Threading.Tasks.Task<DTO.ProductDTO[]> GetProductByPriceAndCategoryAsync(double MinPrice, double MaxPrice, int idCategory) {
            return base.Channel.GetProductByPriceAndCategoryAsync(MinPrice, MaxPrice, idCategory);
        }
        
        public DTO.ProductDTO[] GetProductByPriceAndRegionAndCategory(double MinPrice, double MaxPrice, int idRegion, int idCategory) {
            return base.Channel.GetProductByPriceAndRegionAndCategory(MinPrice, MaxPrice, idRegion, idCategory);
        }
        
        public System.Threading.Tasks.Task<DTO.ProductDTO[]> GetProductByPriceAndRegionAndCategoryAsync(double MinPrice, double MaxPrice, int idRegion, int idCategory) {
            return base.Channel.GetProductByPriceAndRegionAndCategoryAsync(MinPrice, MaxPrice, idRegion, idCategory);
        }
        
        public void CreateProduct(DTO.ProductDTO newProduct) {
            base.Channel.CreateProduct(newProduct);
        }
        
        public System.Threading.Tasks.Task CreateProductAsync(DTO.ProductDTO newProduct) {
            return base.Channel.CreateProductAsync(newProduct);
        }
        
        public void DeleteProduct(int id) {
            base.Channel.DeleteProduct(id);
        }
        
        public System.Threading.Tasks.Task DeleteProductAsync(int id) {
            return base.Channel.DeleteProductAsync(id);
        }
        
        public void UpdateProduct(DTO.ProductDTO product) {
            base.Channel.UpdateProduct(product);
        }
        
        public System.Threading.Tasks.Task UpdateProductAsync(DTO.ProductDTO product) {
            return base.Channel.UpdateProductAsync(product);
        }
        
        public DTO.CategoryDTO[] GetAllCategory() {
            return base.Channel.GetAllCategory();
        }
        
        public System.Threading.Tasks.Task<DTO.CategoryDTO[]> GetAllCategoryAsync() {
            return base.Channel.GetAllCategoryAsync();
        }
        
        public DTO.CategoryDTO GetCategoryByID(int id) {
            return base.Channel.GetCategoryByID(id);
        }
        
        public System.Threading.Tasks.Task<DTO.CategoryDTO> GetCategoryByIDAsync(int id) {
            return base.Channel.GetCategoryByIDAsync(id);
        }
        
        public void CreateCategory(DTO.CategoryDTO category) {
            base.Channel.CreateCategory(category);
        }
        
        public System.Threading.Tasks.Task CreateCategoryAsync(DTO.CategoryDTO category) {
            return base.Channel.CreateCategoryAsync(category);
        }
        
        public void DeleteCategory(int id) {
            base.Channel.DeleteCategory(id);
        }
        
        public System.Threading.Tasks.Task DeleteCategoryAsync(int id) {
            return base.Channel.DeleteCategoryAsync(id);
        }
        
        public void UpdateCategory(DTO.CategoryDTO category) {
            base.Channel.UpdateCategory(category);
        }
        
        public System.Threading.Tasks.Task UpdateCategoryAsync(DTO.CategoryDTO category) {
            return base.Channel.UpdateCategoryAsync(category);
        }
        
        public DTO.RegionDTO[] GetAllRegion() {
            return base.Channel.GetAllRegion();
        }
        
        public System.Threading.Tasks.Task<DTO.RegionDTO[]> GetAllRegionAsync() {
            return base.Channel.GetAllRegionAsync();
        }
        
        public DTO.RegionDTO GetRegionByID(int id) {
            return base.Channel.GetRegionByID(id);
        }
        
        public System.Threading.Tasks.Task<DTO.RegionDTO> GetRegionByIDAsync(int id) {
            return base.Channel.GetRegionByIDAsync(id);
        }
        
        public void CreateRegion(DTO.RegionDTO region) {
            base.Channel.CreateRegion(region);
        }
        
        public System.Threading.Tasks.Task CreateRegionAsync(DTO.RegionDTO region) {
            return base.Channel.CreateRegionAsync(region);
        }
        
        public void DeleteRegion(int id) {
            base.Channel.DeleteRegion(id);
        }
        
        public System.Threading.Tasks.Task DeleteRegionAsync(int id) {
            return base.Channel.DeleteRegionAsync(id);
        }
        
        public void UpdateRegion(DTO.RegionDTO region) {
            base.Channel.UpdateRegion(region);
        }
        
        public System.Threading.Tasks.Task UpdateRegionAsync(DTO.RegionDTO region) {
            return base.Channel.UpdateRegionAsync(region);
        }
        
        public DTO.PhotoInfoDTO[] GetAllPhotoInfo() {
            return base.Channel.GetAllPhotoInfo();
        }
        
        public System.Threading.Tasks.Task<DTO.PhotoInfoDTO[]> GetAllPhotoInfoAsync() {
            return base.Channel.GetAllPhotoInfoAsync();
        }
        
        public DTO.PhotoInfoDTO GetPhotoInfoById(int IdPhoto) {
            return base.Channel.GetPhotoInfoById(IdPhoto);
        }
        
        public System.Threading.Tasks.Task<DTO.PhotoInfoDTO> GetPhotoInfoByIdAsync(int IdPhoto) {
            return base.Channel.GetPhotoInfoByIdAsync(IdPhoto);
        }
        
        public void CreatePhotoInfo(DTO.PhotoInfoDTO photoDTO) {
            base.Channel.CreatePhotoInfo(photoDTO);
        }
        
        public System.Threading.Tasks.Task CreatePhotoInfoAsync(DTO.PhotoInfoDTO photoDTO) {
            return base.Channel.CreatePhotoInfoAsync(photoDTO);
        }
        
        public void DeletePhotoInfo(int id) {
            base.Channel.DeletePhotoInfo(id);
        }
        
        public System.Threading.Tasks.Task DeletePhotoInfoAsync(int id) {
            return base.Channel.DeletePhotoInfoAsync(id);
        }
        
        public void UpdatePhotoInfo(DTO.PhotoInfoDTO photoDTO) {
            base.Channel.UpdatePhotoInfo(photoDTO);
        }
        
        public System.Threading.Tasks.Task UpdatePhotoInfoAsync(DTO.PhotoInfoDTO photoDTO) {
            return base.Channel.UpdatePhotoInfoAsync(photoDTO);
        }
        
        public System.IO.Stream GetImage(string user, string annonce, string fileName) {
            return base.Channel.GetImage(user, annonce, fileName);
        }
        
        public System.Threading.Tasks.Task<System.IO.Stream> GetImageAsync(string user, string annonce, string fileName) {
            return base.Channel.GetImageAsync(user, annonce, fileName);
        }
        
        public void ApproveOrRejectAll(int[] Ids, string status) {
            base.Channel.ApproveOrRejectAll(Ids, status);
        }
        
        public System.Threading.Tasks.Task ApproveOrRejectAllAsync(int[] Ids, string status) {
            return base.Channel.ApproveOrRejectAllAsync(Ids, status);
        }
        
        public DTO.CommentUserProdDTO[] GetAllComment() {
            return base.Channel.GetAllComment();
        }
        
        public System.Threading.Tasks.Task<DTO.CommentUserProdDTO[]> GetAllCommentAsync() {
            return base.Channel.GetAllCommentAsync();
        }
        
        public void createComment(DTO.CommentUserProdDTO commDTO) {
            base.Channel.createComment(commDTO);
        }
        
        public System.Threading.Tasks.Task createCommentAsync(DTO.CommentUserProdDTO commDTO) {
            return base.Channel.createCommentAsync(commDTO);
        }
    }
}
